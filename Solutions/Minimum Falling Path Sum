// problem link
// https://leetcode.com/problems/minimum-falling-path-sum/

class Solution {
    public int minFallingPathSum(int[][] A) {
        int row = A.length, col = A[0].length;
        int t = 0;
        if(col == 1){
            for(int r = 0; r < row; r++) t += A[r][0];
            return t;
        }
        for(int r = 1; r < row; r++){
            for(int c = 0; c <  col; c++){
                if(c == 0){
                    A[r][c] += Math.min(A[r-1][c], A[r-1][c+1]);
                }else if(c == col -1){
                    A[r][c] += Math.min(A[r-1][c], A[r-1][c-1]);
                }else{
                    A[r][c] += Math.min(Math.min(A[r-1][c], A[r-1][c+1]), A[r-1][c-1]);
                }
            }
        }
        int res = Integer.MAX_VALUE;
        for(int x : A[row-1]){
            if(x < res) res = x;
        }
        return res;
    }
}